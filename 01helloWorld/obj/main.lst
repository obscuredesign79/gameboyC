                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Mar 19 2016) (Linux)
                              4 ; This file was generated Sat Nov  9 13:51:00 2019
                              5 ;--------------------------------------------------------
                              6 	.module main
                              7 	.optsdcc -mgbz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _performantDelay
                             14 	.globl _printf
                             15 	.globl _wait_vbl_done
                             16 ;--------------------------------------------------------
                             17 ; ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; absolute external ram data
                             22 ;--------------------------------------------------------
                             23 	.area _DABS (ABS)
                             24 ;--------------------------------------------------------
                             25 ; global & static initialisations
                             26 ;--------------------------------------------------------
                             27 	.area _HOME
                             28 	.area _GSINIT
                             29 	.area _GSFINAL
                             30 	.area _GSINIT
                             31 ;--------------------------------------------------------
                             32 ; Home
                             33 ;--------------------------------------------------------
                             34 	.area _HOME
                             35 	.area _HOME
                             36 ;--------------------------------------------------------
                             37 ; code
                             38 ;--------------------------------------------------------
                             39 	.area _CODE
                             40 ;main.c:4: void performantDelay(UINT8 numloops){
                             41 ;	---------------------------------
                             42 ; Function performantDelay
                             43 ; ---------------------------------
   0000                      44 _performantDelay::
                             45 ;main.c:7: for(i=0;i<numloops;i++){
   0000 06 00                46 	ld	b,#0x00
   0002                      47 00103$:
   0002 78                   48 	ld	a,b
   0003 F8 02                49 	ldhl	sp,#2
   0005 96                   50 	sub	a, (hl)
   0006 D0                   51 	ret	NC
                             52 ;main.c:8: wait_vbl_done();
   0007 C5                   53 	push	bc
   0008 CDr00r00             54 	call	_wait_vbl_done
   000B C1                   55 	pop	bc
                             56 ;main.c:7: for(i=0;i<numloops;i++){
   000C 04                   57 	inc	b
   000D 18 F3                58 	jr	00103$
   000F C9                   59 	ret
                             60 ;main.c:13: void main() {
                             61 ;	---------------------------------
                             62 ; Function main
                             63 ; ---------------------------------
   0010                      64 _main::
                             65 ;main.c:20: printf("a=%x\n",a);
   0010 11r40r00             66 	ld	de,#___str_0
   0013 21 01 00             67 	ld	hl,#0x0001
   0016 E5                   68 	push	hl
   0017 D5                   69 	push	de
   0018 CDr00r00             70 	call	_printf
   001B E8 04                71 	add	sp, #4
                             72 ;main.c:21: printf("b=%x\n",b);
   001D 11r46r00             73 	ld	de,#___str_1
   0020 21 02 00             74 	ld	hl,#0x0002
   0023 E5                   75 	push	hl
   0024 D5                   76 	push	de
   0025 CDr00r00             77 	call	_printf
   0028 E8 04                78 	add	sp, #4
                             79 ;main.c:23: printf("a + b = %x",c);
   002A 11r4Cr00             80 	ld	de,#___str_2
   002D 21 03 00             81 	ld	hl,#0x0003
   0030 E5                   82 	push	hl
   0031 D5                   83 	push	de
   0032 CDr00r00             84 	call	_printf
   0035 E8 04                85 	add	sp, #4
                             86 ;main.c:25: performantDelay(5);
   0037 3E 05                87 	ld	a,#0x05
   0039 F5                   88 	push	af
   003A 33                   89 	inc	sp
   003B CDr00r00             90 	call	_performantDelay
   003E 33                   91 	inc	sp
   003F C9                   92 	ret
   0040                      93 ___str_0:
   0040 61 3D 25 78          94 	.ascii "a=%x"
   0044 0A                   95 	.db 0x0A
   0045 00                   96 	.db 0x00
   0046                      97 ___str_1:
   0046 62 3D 25 78          98 	.ascii "b=%x"
   004A 0A                   99 	.db 0x0A
   004B 00                  100 	.db 0x00
   004C                     101 ___str_2:
   004C 61 20 2B 20 62 20   102 	.ascii "a + b = %x"
        3D 20 25 78
   0056 00                  103 	.db 0x00
                            104 	.area _CODE
                            105 	.area _CABS (ABS)
